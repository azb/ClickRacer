<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_car</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
speedstart = 12
step = 0
score = 0
lives = 3
maxlives = lives

topscore = 0

newrecord = 0

juice = room_height

a = 0
ad = .1
/*
view_wport[0] = display_get_width()
view_hport[0] = display_get_height()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if step = 1
    {
    speed+=.6
    alarm[1] = 10
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xstart
y = ystart
image_angle = 0
direction = 0
speed = speedstart
step = 1
alarm[1] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    
if ad &lt; 0
if a &lt; .3
ad = .1

if a &gt;= 1
ad = -.1

a += ad

if step = 1
    {
    if mouse_check_button_pressed(1) || keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_right)
        {
        //nt = instance_nearest(x+lengthdir_x(32,direction),y+lengthdir_y(32,direction),obj_track)
        //direction = point_direction(x,y,nt.x,nt.y)
        direction -= 30
        image_angle = direction
        //speed+=.25
        }
    
        
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_sprite_ext(sprite_index,0,x,y,1,1,direction,c_white,1)

if step = 0
    {
    draw_set_font(font_small)
    draw_set_halign(fa_center)
    draw_set_valign(fa_center)
    draw_set_alpha(a)
    draw_text(room_width/2,room_height/2+64,"Tap to Start Game")
    draw_set_alpha(1)
    draw_text(room_width/2,room_height/2-64,"Rules: Stay on the Track#Controls: Tap to Steer")
    if mouse_check_button_pressed(1) || keyboard_check_pressed(vk_space)
        {
        speed = speedstart
        alarm[1] = 10
        step = 1
        }
    }
if step = 1
    {
    draw_set_font(font_small)
    draw_text(room_width/2,48,"Score: "+string(score))
    score++
    if !collision_circle(x,y,3,obj_track,1,1)
        {
        scr_crash()
        }
    len = point_distance(0,0,sprite_width,sprite_height)/2
    dir = point_direction(0,0,sprite_width,sprite_height)
    x1 = x+lengthdir_x(len,image_angle+dir)
    y1 = y+lengthdir_y(len,image_angle+dir)

    if !collision_circle(x1,y1,2,obj_track,1,1)
        {
        scr_crash()
        }
        
    x1 = x+lengthdir_x(len,image_angle-dir)
    y1 = y+lengthdir_y(len,image_angle-dir)

    if !collision_circle(x1,y1,2,obj_track,1,1)
        {
        scr_crash()
        }
    }
if step = 1.1
    {
    draw_set_font(font_large)
    draw_set_alpha(sin(degtorad(alarm[0]*15))+.5)
    draw_text(room_width/2,room_height/2,"Crash!")
    draw_set_alpha(1)
    alarm[1] = 10
    }
    
if step = 2
    {
    draw_set_font(font_large)
    draw_text(room_width/2,room_height/2 - juice-96,"Game Over!")
    draw_set_font(font_small)
    draw_set_alpha(a)
    draw_text(room_width/2,room_height/2 - juice,"Score: "+string(score))
    draw_set_alpha(1)
    
    if !newrecord
    draw_text(room_width/2,room_height/2+64 - juice,"Top Score: "+string(topscore))
    else
    draw_text(room_width/2,room_height/2+64 - juice,"New High Score!")
    
    if button(spr_button , room_width/2 - sprite_get_width(spr_button)/2 , room_height - 420 + juice , sprite_get_width(spr_button) , sprite_get_height(spr_button),'Restart Game',-1 , -1 , '')
     || keyboard_check_pressed(vk_space)
        { 
        step = 0
        x = xstart
        y = ystart
        direction = 0
        lives = maxlives
        score = 0
        juice = room_height
        }
     juice = adjust(juice,0)
     
    }
    
for(i=0 ; i&lt;maxlives ; i++)
    {
    draw_sprite_ext(spr_car , 0 , 116 - 32 + 126 * i , 8 + 16*4, 1 , 1 , 0 , c_gray , .5)
    }
for(i=0 ; i&lt;lives ; i++)
    {
    draw_sprite(spr_car , 0 , 116 - 32 + 126 * i , 8 + 16*4)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
