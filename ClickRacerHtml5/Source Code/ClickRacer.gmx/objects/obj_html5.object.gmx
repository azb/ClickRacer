<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* 
This object is persistent and thus only needs to be placed in the first room of 
the game.

The game should never return to that room and you should not use that room as a 
menu
*/

// initialise variables

// Set the expected orientation of your game (the one you want users to play in).
// 0 = landscape
// 1 = portrait
or_ex=0;

// Whether or not testing on desktop should function as on mobile
// 0 = No, play at a set size with the game centered on desktop
// 1 = Yes, allow game to act as it would on a mobile device
desktest=0;

// Turn centering of the canvas on or off. Use this instead of the global game setting.
// 0 = Do not center the game in the browser window
// 1 = Do center the game in the browser window
centering=0;

paused=0;
orientation=mhtml5_check_orientation();

// hide address bar &amp; set alarm for the address bar to hide every 5 seconds.
mhtml5_hide_addressbar();
alarm[0]=5*room_speed;

// resize the screen to match the window size
// This should be called on the create, room_start and resize events
mhtml5_resize_screen(or_ex,1);
if (centering==1) {
mhtml5_center_canvas();
}


// move out of the set up room into the menu / game room

room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// hide address bar &amp; set alarm for the address bar to hide every 5 seconds.

mhtml5_hide_addressbar();
alarm[0]=5*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// check orientation (unless we're on desktop and desktest mode isn't enabled).

if (os_type==os_windows||os_type==os_macosx) {

if (os_type!=os_winphone&amp;&amp;os_type!=os_win8native) {

if (desktest==0) {

orientation=or_ex;

}

else {

orientation=mhtml5_check_orientation();

}

} else {

orientation=mhtml5_check_orientation();

}

}
else {

orientation=mhtml5_check_orientation();

}

// Check if the orientation is not the one you want, pause the game if that's the case.
if (orientation!=or_ex) {

if (paused==0) {

paused=1;
instance_deactivate_all(true);

}

} else {

if (paused==1) {

paused=0;
instance_activate_all();

}

}

// resize the screen
mhtml5_resize_screen(or_ex,1);
if (centering==1) {
mhtml5_center_canvas();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// resize the screen to match the window size
// This should be called on the create, room_start and resize events
mhtml5_resize_screen(or_ex,1);
if (centering==1) {
mhtml5_center_canvas();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw a warning telling the user to flip the screen back the right way

if (paused==1) {

mhtml5_draw_flipwarning(or_ex);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
